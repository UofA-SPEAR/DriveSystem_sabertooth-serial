!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
BOARD_TAG	Makefile	/^BOARD_TAG	 = uno$/;"	m
CMD_POWER	main.h	/^    CMD_POWER,$/;"	e	enum:__anon5
CMD_TURNING	main.h	/^    CMD_TURNING$/;"	e	enum:__anon5
MAIN_H_	main.h	2;"	d
MONITER_PORT	Makefile	/^MONITER_PORT = \/dev\/ttyACM0$/;"	m
SABERTOOTH_H_	sabertooth.h	2;"	d
SABER_BAUD_115200	sabertooth.h	/^    SABER_BAUD_115200   = 5$/;"	e	enum:__anon3
SABER_BAUD_19200	sabertooth.h	/^    SABER_BAUD_19200    = 3,$/;"	e	enum:__anon3
SABER_BAUD_2400	sabertooth.h	/^    SABER_BAUD_2400     = 1,$/;"	e	enum:__anon3
SABER_BAUD_38400	sabertooth.h	/^    SABER_BAUD_38400    = 4,$/;"	e	enum:__anon3
SABER_BAUD_9600	sabertooth.h	/^    SABER_BAUD_9600     = 2,$/;"	e	enum:__anon3
SABER_INVALID_VALUE	sabertooth.h	/^    SABER_INVALID_VALUE,$/;"	e	enum:__anon1
SABER_MOTOR_1	sabertooth.h	/^    SABER_MOTOR_1 = 1,$/;"	e	enum:__anon2
SABER_MOTOR_2	sabertooth.h	/^    SABER_MOTOR_2 = 2$/;"	e	enum:__anon2
SABER_RX	sabertooth.h	7;"	d
SABER_SUCCESS	sabertooth.h	/^    SABER_SUCCESS,$/;"	e	enum:__anon1
SABER_TX	sabertooth.h	8;"	d
SaberMotor	sabertooth.cpp	/^SaberMotor::SaberMotor(uint8_t address, saber_motor_t motor_num, uint32_t baudrate) {$/;"	f	class:SaberMotor
SaberMotor	sabertooth.h	/^class SaberMotor {$/;"	c
address	sabertooth.h	/^    uint8_t address;$/;"	m	struct:__anon4
baudrate	sabertooth.h	/^    uint8_t baudrate;$/;"	m	struct:__anon4
cmd_t	main.h	/^} cmd_t;$/;"	t	typeref:struct:__anon6
cmd_type_t	main.h	/^} cmd_type_t;$/;"	t	typeref:enum:__anon5
command	main.cpp	/^cmd_t command;$/;"	v
deadband	sabertooth.h	/^    uint8_t deadband;$/;"	m	struct:__anon4
handle_command	main.cpp	/^static void handle_command(cmd_t * cmd) {$/;"	f	file:
loop	main.cpp	/^void loop() {$/;"	f
max_voltage	sabertooth.h	/^    float max_voltage;$/;"	m	struct:__anon4
min_voltage	sabertooth.h	/^    float min_voltage;$/;"	m	struct:__anon4
motor_num	sabertooth.h	/^    uint8_t motor_num;$/;"	m	struct:__anon4
ramp_setting	sabertooth.h	/^    uint8_t ramp_setting;$/;"	m	struct:__anon4
read_serial_command	main.cpp	/^static void read_serial_command(cmd_t * cmd) {$/;"	f	file:
saber_baud_t	sabertooth.h	/^} saber_baud_t;$/;"	t	typeref:enum:__anon3
saber_channel_settings_t	sabertooth.h	/^} saber_channel_settings_t;$/;"	t	typeref:struct:__anon4
saber_err_t	sabertooth.h	/^} saber_err_t;$/;"	t	typeref:enum:__anon1
saber_motor_t	sabertooth.h	/^} saber_motor_t;$/;"	t	typeref:enum:__anon2
sendCommand	sabertooth.cpp	/^void SaberMotor::sendCommand(uint8_t command, uint8_t value) {$/;"	f	class:SaberMotor
serialInit	sabertooth.cpp	/^void SaberMotor::serialInit(uint32_t baudrate) {$/;"	f	class:SaberMotor
setBaudRate	sabertooth.cpp	/^saber_err_t SaberMotor::setBaudRate(saber_baud_t baudrate) {$/;"	f	class:SaberMotor
setDeadband	sabertooth.cpp	/^saber_err_t SaberMotor::setDeadband(uint8_t deadband) {$/;"	f	class:SaberMotor
setMaxVoltage	sabertooth.cpp	/^saber_err_t SaberMotor::setMaxVoltage(float voltage) {$/;"	f	class:SaberMotor
setMinVoltage	sabertooth.cpp	/^saber_err_t SaberMotor::setMinVoltage(float voltage) {$/;"	f	class:SaberMotor
setMotorSpeed	sabertooth.cpp	/^void SaberMotor::setMotorSpeed(int8_t speed) {$/;"	f	class:SaberMotor
setRampingRate	sabertooth.cpp	/^saber_err_t SaberMotor::setRampingRate(uint8_t ramp_setting) {$/;"	f	class:SaberMotor
settings	sabertooth.h	/^        saber_channel_settings_t settings;$/;"	m	class:SaberMotor
setup	main.cpp	/^void setup() {$/;"	f
speed	sabertooth.h	/^    int8_t speed;$/;"	m	struct:__anon4
type	main.h	/^    cmd_type_t type;$/;"	m	struct:__anon6
value	main.h	/^    int8_t value;$/;"	m	struct:__anon6
